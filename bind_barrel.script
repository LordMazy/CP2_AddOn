-- -*- mode: lua; encoding: windows-1251 -*-
-- Биндер взрывающихся бочек

function init(obj)
    local new_binder = barrel_binder(obj)
    obj:bind_object(new_binder)
end

---------------------------------------------------------------------------------------------
-- Порядок загрузки:
-- reload
-- reinit
-- load
-- net_spawn
---------------------------------------------------------------------------------------------
class "barrel_binder" (object_binder)
function barrel_binder:__init(obj) super(obj)
end 

function barrel_binder:net_destroy()
	-- состояние нулевое == взорвано
	if self.object:condition() == 0 then
		local section = self.object:section()
		if section == "quest_vodka" then
			-- озвучка разбивания бутылок
			xr_sound.get_safe_sound_object([[material\bottle\collide\bottle_break_1]]):play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			self:check_quest("quest_vodka", 130)
		elseif section == "quest_barrel" then
			self:check_quest("quest_barrel", 46)
		end
	end

    object_binder.net_destroy(self)
end
-- аргументы - сколько и чего надо разломать - чтоб не путаться
function barrel_binder:check_quest(name, num)
	-- сохраняем проверку в пстор, так надёжней
	-- не лопнет пакет от одной строки и одного числа
	local v = amk.load_variable(name, 0) + 1
	if v>=num then
		if not has_alife_info("sklad_barrel_have") then
			db.actor:give_info_portion("sklad_barrel_have")
			db.actor:give_info_portion("borov_bottle_have")
		end
		amk.del_variable(name)
	else
		amk.save_variable(name, v)
	end
end

function barrel_binder:update(delta)
	if has_alife_info("sklad_barrel_have") then -- рвануло - убираем невзорвавшиеся бочки/бутылки
		local obj = alife():object(self.object:id())
		if obj then alife():release(obj) end
	end
	
    object_binder.update(self, delta)
end

