-- -*- mode: lua; encoding: windows-1251 -*-
function init(obj)
	obj:bind_object( minigun_binder(obj) )
end
---------------------------------------------------------------------------------------------
-- Порядок загрузки:
-- reload
-- reinit
-- load
-- net_spawn
---------------------------------------------------------------------------------------------
local binders = {}

class "minigun_binder" (object_binder)
function minigun_binder:__init(obj) super(obj)
	self.charge = 0
	self.fire = false
end 

function minigun_binder:reinit()
	object_binder.reinit(self)

	self.id = self.object:id()
	self.se_wpn = alife():object(self.id)
	self.full_charge_time = sys_ini:r_float( self.object:section(), "full_charge_time" ) * 1000
	self.worked_time = self.se_wpn.worked_time
	binders[self.id] = self
end

function minigun_binder:net_destroy()
	object_binder.net_destroy(self)

	self.fire = false
	binders[self.id] = nil
end

function minigun_binder:update(delta)
	object_binder.update(self, delta)

	local wpn = db.actor:active_item()
	if wpn and wpn:id() == self.id then
		if not self.subscribed then
			self.subscribed = true
			xr_s.subscribe( "key_press", self.on_key_press, {self = self} )
			xr_s.subscribe( "key_release", self.on_key_release, {self = self} )
		end
		if self.worked_time >= self.full_charge_time then
			db.actor:move_to_ruck(self.object)
			amk.send_tip("Для использования "..game.translate_string( get_inv_name(self.object:section()) ).." необходимо поменять аккумулятор!", nil, nil, 5, "nano")
			return
		end
	elseif self.subscribed then
		self.subscribed = nil
		self.fire = false
		xr_s.unsubscribe("key_press", self.on_key_press)
		xr_s.unsubscribe("key_release", self.on_key_release)
	end
	
	if self.fire then
		if self.object:get_ammo_in_magazine() == 0 then return end
		self.worked_time = self.worked_time + delta
		self.se_wpn.worked_time = self.worked_time
	end
end

function minigun_binder:on_key_press(dik, bind)
	if bind ~= key_bindings.kWPN_FIRE then return end
	if level.main_input_receiver() == nil then
		self.fire = true
	end
end

function minigun_binder:on_key_release(dik, bind)
	if bind ~= key_bindings.kWPN_FIRE then return end
	self.fire = false
end

function minigun_binder:on_change_accum()
	if self.worked_time/self.full_charge_time < 0.9 then
		ui_inv_add.show_inv_msg("Аккумулятор не требует замены")
		return false
	end
	self.worked_time = 0
	self.se_wpn.worked_time = self.worked_time
	return true
end
------------------------------------------------------------------------------------------------------

function charge(accum, item)
	local binder = binders[item:id()]
	if binder then
		if binder:on_change_accum() then
			local se_obj = alife():object( accum:id() )
			if se_obj then alife():release(se_obj, true) end
			zvuki.use_snd("acumm")
		end
	end
end

