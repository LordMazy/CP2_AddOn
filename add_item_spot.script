-- -*- mode: lua; encoding: windows-1251 -*-
function start_menu(self)
	self:OnButton_return_game()
	
	local wnd = add_item_spot.ui_add_spot(get_hud())
	level.start_stop_menu(wnd, true)
end

class "ui_add_spot" (CUIScriptWnd)

function ui_add_spot:__init(owner) super(owner)
	self.owner = owner
	self.items_ids = {}
	self:InitControls()
end

function ui_add_spot:__finalize() end

function ui_add_spot:InitControls()
	self:Init(0,0,1024,768)
	
	local back = CUIFrameWindow()
	back:SetAutoDelete(true)
	back:Init("ui_icons_PDA_dialog_frame",150, 100, 256,256)
	self:AttachChild(back)
	
	self.edit_sect = self:InitEditBoxEx( back, 20, 70, 216, "pda" )
	
	self.text = CUIStatic()
	self.text:SetAutoDelete(true)
	self.text:Init(20,110,216,25)
	self.text:SetText("")
	self.text:SetTextColor(255,200,200,10)
	back:AttachChild(self.text)
	
	self.check_lvl = CUICheckButton()
	self.check_lvl:SetAutoDelete(true)
	self.check_lvl:Init("ui_checker",15,162,90,20)
	self.check_lvl:SetText("Только на этой локации")
	self.check_lvl:SetTextColor(255,216,186,140)
	back:AttachChild(self.check_lvl)
	
	self.check_p = CUICheckButton()
	self.check_p:SetAutoDelete(true)
	self.check_p:Init("ui_checker",15,140,90,20)
	self.check_p:SetText("Безхозные предметы / Пустые тайники")
	self.check_p:SetTextColor(255,216,186,140)
	back:AttachChild(self.check_p)
	
	local st
	st = CUIStatic()
	st:SetAutoDelete(true)
	st:Init(20,17,100,25)
	st:SetText("Введите название предмета:")
	st:SetFont(GetFontLetterica18Russian())
	back:AttachChild(st)
	
	st = CUIStatic()
	st:SetAutoDelete(true)
	st:Init(160,232,70,20)
	st:SetText("made by naxac ©")
	st:SetTextColor(255,255,127,150)
	back:AttachChild(st)
	
	local btn
	btn = CUI3tButton()
	btn:SetAutoDelete(true)
	btn:Init("ui_button_ordinary", 7, 190, 117, 29)
	btn:SetText("Искать")
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextColor(255,216,186,140)
	back:AttachChild(btn)
	self:Register(btn, "btn_check")
	self:AddCallbackEx("btn_check", ui_events.BUTTON_CLICKED, self.on_ButtonCheck_clicked)
	
	btn = CUI3tButton()
	btn:SetAutoDelete(true)
	btn:Init("ui_button_ordinary", 132, 190, 117, 29)
	btn:SetText("Установить метку")
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextColor(255,216,186,140)
	back:AttachChild(btn)
	self:Register(btn, "btn_add")
	self:AddCallbackEx("btn_add", ui_events.BUTTON_CLICKED, self.on_ButtonAddSpot_clicked)
	
	btn = CUI3tButton()
	btn:SetAutoDelete(true)
	btn:Init("ui_button_ordinary", 7, 225, 117, 29)
	btn:SetText("Удалить метки")
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextColor(255,216,186,140)
	back:AttachChild(btn)
	self:Register(btn, "btn_del")
	self:AddCallbackEx("btn_del", ui_events.BUTTON_CLICKED, self.on_ButtonDelete_clicked)
	
	btn = CUI3tButton()
	btn:SetAutoDelete(true)
	btn:Init("ui_button_ordinary", 132, 225, 117, 29)
	btn:SetText("Поиск тайников")
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextColor(255,216,186,140)
	back:AttachChild(btn)
	self:Register(btn, "btn_treasures")
	self:AddCallbackEx("btn_treasures", ui_events.BUTTON_CLICKED, self.on_ButtonSearchtreasures_clicked)
end

function ui_add_spot:on_ButtonDelete_clicked()
	local obj
	for i=1,65534 do
		obj = alife():object(i)
		if obj then
			if level.map_has_object_spot(obj.id, "red_location_1")~=0 then
				level.map_remove_object_spot(obj.id, "red_location_1")
			end
		end
	end
	self.text:SetText("МЕТКИ УДАЛЕНЫ")
	self.text:SetTextColor(255,0,200,0)
end

function ui_add_spot:on_ButtonSearchtreasures_clicked()
	local on_level = self.check_lvl:GetCheck()
	local show_empty = self.check_p:GetCheck()
	local gg = game_graph()
	local act_level = gg:vertex(db.actor:game_vertex_id()):level_id()
	local treasures = {}
	local obj, obj_name, tmp, pid, p
	for i=1,65534 do
		obj = alife():object(i)
		if obj and obj.parent_id then
			pid = obj.parent_id
			p = alife():object(pid)
			if p and pid~=0 and pid~=65535 and p:clsid()==clsid.inventory_box then
				if (on_level==true and gg:vertex(p.m_game_vertex_id):level_id()==act_level) or on_level==false then
					if treasures[pid] == nil then treasures[pid] = {} end
					tmp = treasures[pid]
					obj_name = game.translate_string(get_inv_name(obj:section_name()))
					if obj_name==nil then abort("add_tiem_spot: can't read inv_name from section [%s]", obj:section_name()) return end
					if tmp[obj_name] then tmp[obj_name] = tmp[obj_name]+1
					else tmp[obj_name] = 1 end
				end
			elseif show_empty and obj:clsid()==clsid.inventory_box then
				if (on_level==true and gg:vertex(obj.m_game_vertex_id):level_id()==act_level) or on_level==false then
					if treasures[obj.id] == nil then treasures[obj.id] = {} end
				end
			end
		end
	end
	local hint
	for id, tbl in pairs(treasures) do
		hint = ""
		for name, num in pairs(tbl) do
			hint = hint..name.."("..num.."), "
		end
		if #hint==0 then hint = "Пустой, " end
		hint = "%c[255,150,245,25]Тайник: "..alife():object(id):name().."\\n%c[default]"..hint
		hint = hint:sub(1,-3)
		if level.map_has_object_spot(id, "red_location_1")~=0 then
			level.map_change_spot_hint(id, "red_location_1", hint)
		else
			level.map_add_object_spot(id, "red_location_1", hint)
		end
	end
	if hint~=nil then
		news_manager.send_tip(db.actor, "Метки установлены, смотрите карту.")
		self:OnQuit()
	else
		self.text:SetText("ТАЙНИКИ С СОДЕРЖИМЫМ НЕ НАЙДЕНЫ")
		self.text:SetTextColor(255,200,0,0)
	end
end

function ui_add_spot:on_ButtonCheck_clicked()
	if self:find_items()==true then
		self.text:SetText("ПРЕДМЕТЫ НАЙДЕНЫ!")
		self.text:SetTextColor(255,0,200,0)
	else
		self.text:SetText("НЕ УДАЛОСЬ НАЙТИ ПРЕДМЕТЫ")
		self.text:SetTextColor(255,200,0,0)
	end
end

function ui_add_spot:find_items()
	local text = self.edit_sect:GetText()
	local res = false
	self.items_ids = {}
	if text~=nil and text~="" then
		text = string.lower1(text)
		local obj, obj_lvl, obj_pid, ftext
		local on_level = self.check_lvl:GetCheck()
		local no_parent = self.check_p:GetCheck()
		local gg = game_graph()
		local act_lvl = gg:vertex(db.actor:game_vertex_id()):level_id()
		for i=1,65534 do
			obj = alife():object(i)
			if obj and obj.parent_id~=0 then
				obj_lvl = gg:vertex(obj.m_game_vertex_id):level_id()
				obj_pid = obj.parent_id
				if (on_level==true and obj_lvl==act_lvl) or on_level==false then
					local hint = get_inv_name(obj:section_name())
					if hint~=nil then
						hint = game.translate_string(hint)
						hint = string.gsub(hint, "[ёЁ]", "е")
						if string.find(string.lower1(hint), text, 1, true) then
							if obj_pid~=65535 then
								local p = alife():object(obj_pid)
								hint = hint.."\\n".."%c[255,160,160,160]Владелец: "..p:name()
							end
							if (no_parent==true and obj_pid==65535) or no_parent==false then
								self.items_ids[obj.id] = hint
								res = true
							end
						end
					end
				end
			end
		end
	end
	return res
end

function ui_add_spot:on_ButtonAddSpot_clicked()
	local added = false
	for id, hint in pairs(self.items_ids) do
		local obj = alife():object(id)
		if obj.parent_id~=65535 then
			id = obj.parent_id
		end
		if level.map_has_object_spot(id, "red_location_1")==0 then
			level.map_add_object_spot(id, "red_location_1", hint)
		end
		added = true
	end
	
	if added == false then
		if self:find_items()==false then
			self.text:SetText("НЕ УДАЛОСЬ НАЙТИ ПРЕДМЕТЫ")
			self.text:SetTextColor(255,200,0,0)
		else
			self:on_ButtonAddSpot_clicked()
		end
	else
		news_manager.send_tip(db.actor, "Метки установлены, смотрите карту.")
		self:OnQuit()
	end
end

function ui_add_spot:OnQuit()
	self:unregister_self()
	self:GetHolder():start_stop_menu(self, true)
end

function ui_add_spot:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	self.edit_sect:OnKeyboard(dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			self:OnQuit()
		elseif dik == DIK_keys.DIK_RETURN then
			self:on_ButtonAddSpot_clicked()
		end
	end
	return true
end
