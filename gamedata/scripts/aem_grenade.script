-- -*- mode: lua; encoding: windows-1251 -*-

---------------------------------------------------------------------------------------------------
-- вывод отладочной информации
---------------------------------------------------------------------------------------------------
function printf(fmt, ...)
	local msg = string.format(fmt, ...)
	local msg_no_ws = string.gsub(msg, "%s", "_")
	get_console():execute("dbg:" .. msg_no_ws)
end

--------
-- 
--------
function unload1()
	--printf("unload1")
	local sim = alife()
	local actor = db.actor
	local lvid = actor:level_vertex_id()
	local gvid = actor:game_vertex_id()
	local pos = actor:position()
	pos.x = pos.x + 10
	pos.y = pos.y + 10
	pos.z = pos.z + 10
	local slot2_id = 0
	local cnt = 0
	local ids = {}

	local obj = actor:item_in_slot(inventory_slots.RIFLE)
	if obj then
		slot2_id = obj:id()
	end

	local i, cid, section, launcher
	local n = actor:object_count()
	for i=0, n-1 do
		obj = actor:object(i)
		cid = obj:clsid()
		if cid == clsid.wpn_ak74_s or cid == clsid.wpn_groza_s then
			--printf(" name='%s'", obj:name())
			section = obj:section()
			launcher = sys_ini:r_u32(section, "grenade_launcher_status")
			if launcher ~= 0 then
				--printf(" launcher - ~0")
				local id = obj:id()
				local se_obj = sim:object(id)
				local data = netpk:get(se_obj)
				if (launcher == 1) or (launcher == 2 and bit_and(data.addon_flags, addon_flags.grenade_launcher) ~= 0) then
					--printf(" launcher - ok")
					if data.upd.grenade_mode == 1 then
						--printf(" grenade_mode")
						if data.ammo_elapsed > 0 then
							--printf(" unload_magazine")
							obj:unload_magazine()
						end
					else
						sim:release(se_obj, true)
						se_obj = sim:create(section, pos, lvid, gvid)
						netpk.update = false
						netpk:set(se_obj, data)
						cnt = cnt + 1
						if id == slot2_id and cnt > 1 then
							--printf(" slot2 weapon (%d)", se_obj.id)
							ids[cnt] = ids[1]
							ids[1] = se_obj.id
						else
							--printf(" inventory weapon (%d)", se_obj.id)
							ids[cnt] = se_obj.id
						end
					end
				end
			end
		end
	end

	if cnt == 0 then
		return nil
	end

	return ids
end

--------
-- 
--------
function unload2(ids)
	--printf("unload2")
	local i, id, obj
	for i, id in pairs(ids) do
		--printf(" %d) id=%d", i, id)
		obj = level.object_by_id(id)
		if not obj then
			--printf(" nil obj")
			return false
		end
	end
	for i, id in pairs(ids) do
		obj = level.object_by_id(id)
		obj:transfer_item(obj, db.actor)
	end
	return true
end
