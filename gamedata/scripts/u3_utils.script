-- -*- mode: lua; encoding: windows-1251 -*-
-----------------------------------------------------------------------------
-- u3_utils.script
-- zestawik maіych funkcji i klas, przydatnych w innych skryptach.
-- tam, gdzie nie jest napisane inaczej, autor: utak3r.
-- 
-- Last update: 2009.12.29
-----------------------------------------------------------------------------

--
-- Sprawdzenie, czy jest gra i czy aktor jest їywy
--
function isGameOn()
	return level.present() and db.actor and db.actor:alive()
end

--
-- Zapis stanu gry (save)
--
function savegame(save_name, save_anyway)
	if not isGameOn() then return end
	if (not save_anyway) and game_options.AutoSave==false then return end
	if has_alife_info("no_autosave") then
        cant_save("Сейв не создан - во время выполнения этого задания сохраняться нельзя")
		return
	end
	if amk.load_variable("no_save", false) then
--        cant_save("Автосохранение не создано - прошло мало времени с момента последней загрузки")
		log("~ u3_utils.savegame: Can't save: too little timeout while loading")
        return
    end
	
	save_name = save_name:clear()
	if string.len(save_name)>60 then
		save_name = string.sub(save_name,1,58).."..."
	end
	get_console():execute("save "..save_name)
	show_game_saved( save_name )
end

function savegame_date(save_name)
	savegame(save_name..". "..game.translate_string(level.name())..". День "..(amk.game_days()+1))
end
function savegame_lc(name, to_level)
	savegame(name.." "..game.translate_string(level.name()).." - "..game.translate_string(to_level)..". День "..(amk.game_days()+1))
end
function savegame_on_level()
	savegame("Сохранение на уровне. "..game.translate_string(level.name())..". День "..(amk.game_days()+1), true)
end

function can_save() -- не сохраняем во время открытых окон, когда нельзя сделать квиксейв
	return level.main_input_receiver()==nil
end

function cant_save(reason) -- сообщение, что нельзя сохраняться во время определенных действий
	local hud = get_hud():AddCustomStatic("cant_walk", true)
	hud:wnd():SetText(reason)
end
----------------------------------------------------------------------------------------------
-- Save Rename mod
local tmr = nil

function quick_save_rename()
	tmr = nil

	local user_old = old_user_name()
	local save_name = user_old.."_quicksave"
	local fs = getFS()
	if fs:exist("$game_saves$", save_name..".sav") == nil then return end

	local f1 = fs:update_path("$game_saves$", save_name..".sav")
	local f2, f3
	if game_options.SaveRen then
		local new_svname = string.format( "День %d. %02d-%02d. %s",
			(amk.game_days()+1), level.get_time_hours(), level.get_time_minutes(),
			game.translate_string(level.name()) )
		new_svname = new_svname:clear()
		f2 = fs:update_path("$game_saves$", new_svname..".sav")
		fs:file_copy(f1, f2)
		if fs:exist("$game_saves$", save_name..".dds") then
			f2 = fs:update_path("$game_saves$", save_name..".dds")
			f3 = fs:update_path("$game_saves$", new_svname..".dds")
			fs:file_copy(f2, f3)
		end
	end
	
	local user = user_name()
	if user_old ~= user then
		local re_name = user.."_quicksave"
		re_name = re_name:clear()
		f2 = fs:update_path("$game_saves$", re_name..".sav")
		fs:file_rename(f1, f2, true)
		get_console():execute( "load_last_save "..re_name )
		if fs:exist("$game_saves$", save_name..".dds") then
			f1 = fs:update_path("$game_saves$", save_name..".dds")
			f2 = fs:update_path("$game_saves$", re_name..".dds")
			fs:file_rename(f1, f2, true)
		end
	end
end

function auto_save_rename(old_level)
	local save_name = old_user_name().."_autosave"
	local fs = getFS()
	if fs:exist("$game_saves$", save_name..".sav") == nil then return end

	local new_svname = "Переход "..game.translate_string(old_level or "unknown level")..
		" - "..game.translate_string(level.name())
	new_svname = new_svname:clear()

	local f1 = fs:update_path("$game_saves$", save_name..".sav")
	local f2 = fs:update_path("$game_saves$", new_svname..".sav")
	fs:file_rename(f1, f2, true)

	get_console():execute( "load_last_save "..new_svname )

	if fs:exist("$game_saves$", save_name..".dds") then
		fs:file_delete("$game_saves$", save_name..".dds")
	end
end

function on_quicksave()
	if db.actor:alive() then
		start_small_timer( 300, this.show_game_saved, user_name().."_quicksave" )
		if tmr then remove_small_timer(tmr) end
		tmr = start_small_timer( 1000, u3_utils.quick_save_rename )
	end
end

function load_quicksave()
	if old_user_name() == user_name() then return end

	local save_name = user_name().."_quicksave"
	if getFS():exist( "$game_saves$", save_name..".sav" ) then
		get_console():execute( "load "..save_name )
	end
end

function show_game_saved( save_name )
	local cs = get_hud():AddCustomStatic( "game_saved", true )
	if cs then
		cs:wnd():SetText( string.format( "%s '%s'", game.translate_string( "st_game_saved" ), save_name ) )
		cs:wnd():SetTextColor( 255, 240, 217, 182 )
		cs.m_endTime = time_global()/1000 + 4
	end
end

