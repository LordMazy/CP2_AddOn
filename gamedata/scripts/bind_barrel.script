-- -*- mode: lua; encoding: windows-1251 -*-
-- Биндер взрывающихся бочек
local counter = nil
local vodka_count = 130
local barrel_count = 46

function init(obj)
    local new_binder = barrel_binder(obj)
    obj:bind_object(new_binder)
end

---------------------------------------------------------------------------------------------
-- Порядок загрузки:
-- reload
-- reinit
-- load
-- net_spawn
---------------------------------------------------------------------------------------------
class "barrel_binder" (object_binder)
function barrel_binder:__init(obj) super(obj)
end

function barrel_binder:net_spawn(data)
	if not object_binder.net_spawn(self, data) then
		return false
	end

	if self.object:section() == "quest_vodka" and counter == nil then
		this.init_counter()
	end

	return true
end

function barrel_binder:net_destroy()
	-- состояние нулевое == взорвано
	if self.object:condition() == 0 then
		local section = self.object:section()
		if section == "quest_vodka" then
			-- озвучка разбивания бутылок
			xr_sound.get_safe_sound_object([[material\bottle\collide\bottle_break_1]]):play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			self:check_quest("quest_vodka", vodka_count)
		elseif section == "quest_barrel" then
			self:check_quest("quest_barrel", barrel_count)
		end
	end

    object_binder.net_destroy(self)
end
-- аргументы - сколько и чего надо разломать - чтоб не путаться
function barrel_binder:check_quest(name, num)
	local v = amk.load_variable(name, 0) + 1
	if v>=num then
		if not has_alife_info("sklad_barrel_have") then
			db.actor:give_info_portion("sklad_barrel_have")
			db.actor:give_info_portion("borov_bottle_have")
		end
		amk.del_variable(name)
		this.remove_counter()
	else
		amk.save_variable(name, v)
		if counter then
			counter = counter - 1
			local st = get_hud():GetCustomStatic("hud_timer")
			st:wnd():SetText( tostring(counter) )
		end
	end
end

function barrel_binder:update(delta)
	if has_alife_info("sklad_barrel_have") then -- рвануло - убираем невзорвавшиеся бочки/бутылки
		local obj = AI:object(self.object:id())
		if obj then AI:release(obj) end
	end
	
    object_binder.update(self, delta)
end


function init_counter()
	local hud = get_hud()
	local st = hud:AddCustomStatic("hud_timer", true)
	counter = vodka_count - amk.load_variable("quest_vodka", 0)
	st:wnd():SetText( tostring(counter) )
	st = hud:AddCustomStatic("hud_timer_text", true)
	st:wnd():SetText("Осталось бутылок")
end

function remove_counter()
	if counter then
		counter = nil
		local hud = get_hud()
		local st = hud:GetCustomStatic("hud_timer")
		if st then
			hud:RemoveCustomStatic("hud_timer")
		end
		st = hud:GetCustomStatic("hud_timer_text")
		if st then
			hud:RemoveCustomStatic("hud_timer_text")
		end
	end
end

