-- -*- mode: lua; encoding: windows-1251 -*-
--\\*"НаноЭкзоСкелет "Скат-15М""..С Системой Жизненной Поддержки (СЖП) и С возможностью апгрейда..Меченый(Стрелок)..
local actor = db.actor

local outfits = {
	["exo_mil_exoskeleton_add"]		= { "health", "bleeding" },
	["exo_mil_exoskeleton_addr"]	= { "health", "bleeding", "radiation" },
	["exo_mil_exoskeleton_addrs"]	= { "health", "bleeding", "radiation", "psy", "power" }
}
	
local system_data = {
	["health"] = {
		info = "skat_health_on",
		check = function()
			return actor.health > 0.5
		end,
		drugs ={ "medkit", "medkit_army", "medkit_scientic", "suvorotka" },
		sms_warning = "Ваше состояние здоровья ниже 50%. Если у вас есть медпрепараты, то Система Жизненной Поддержки произведёт лечение.",
		sms_ok = "Обнаружены медпрепараты. Произвожу применение.",
		sms_fail = "Медпрепараты не обнаружены."
	},
	["bleeding"] = {
		info = "skat_health_on",
		check = function()
			return actor:get_bleeding() <= 0.5
		end,
		drugs ={ "bandage", "suvorotka" },
		sms_warning = "У вас сильное кровотечение. Если у вас есть медпрепараты, то Система Жизненной Поддержки произведёт лечение.",
		sms_ok = "Обнаружены медпрепараты. Произвожу применение.",
		sms_fail = "Медпрепараты не обнаружены."
	},
	["radiation"] = {
		info = "skat_rad_on",
		check = function()
			return arc_radiation.RAD_DOSE < arc_radiation.DOSE_HARMFUL
		end,
		drugs = { "antirad", "medkit_scientic", "suvorotka" },
		sms_warning = "Полученная доза радиации близка к критической. Если у Вас есть антирадиационные препараты, то Система Жизненной Поддержки выведет радиацию из организма.",
		sms_ok = "Обнаружены антирадиационные препараты. Система Жизненой Поддержки производит применение.",
		sms_fail = "Антирадиационные препараты не обнаруженны."
	},
	["psy"] = {
		info = "skat_psy_on",
		check = function()
			return actor.psy_health >= 0.4
		end,
		drugs ={ "antizombie" },
		sms_warning = "Полученная доза пси-излучения привела к Вашему зомбированию. Если у вас есть антидоты, то Система Жизненной Поддержки выведет пси-излучение из организма.",
		sms_ok = "Обнаружены антидоты. Система Жизненой Поддержки производит применение.",
		sms_fail = "Антидоты не обнаруженны."
	},
	["power"] = {
		info = "skat_power_on",
		check = function()
			return actor.power > 0.35
		end,
		drugs ={ "energy_drink" },
		sms_warning = "Вы устали. Ищу энергетики.",
		sms_ok = "Обнаруженны энергетики. Произвожу применение.",
		sms_fail = "Энергетиков нет. Отдохните."
	}
}

function on_actor_update()
	local outfit = actor:item_in_slot( inventory_slots.OUTFIT )
	local sect = outfit and outfit:section() or ""
	
	amk_mod.check_armor(sect)
	
	if not ( outfit
		and outfits[ sect ]
		and actor:alive() )
	then
		return
	end

	for i, v in ipairs( outfits[ sect ] ) do
		system_outfit( system_data[ v ] )
	end
end

function on_sub_actor_update()
	update_spawn()
end

function update_spawn()
	AI:create("doc_1",vector():set(-198.597,4.488,168.971),25633,1363)
	AI:create("art_acumm",vector():set(-33.133,3.548,-64.111),198,1960)
	AI:create("doc_8",vector():set(-33.133,3.548,-64.111),198,1960)
	AI:create("doc_10",vector():set(-89.387,-2.457,-25.271),19105,2875)
	AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
	spawner()
end

function change_exo_cond(cond, id, exo)
	exo:set_condition(cond)
end

function doc_use()
	local e1 = actor:object("exo_mil_exoskeleton")
	if e1 then
		local cond = e1:condition()
		AI:release(AI:object(e1:id()))
		local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_add")
		level.client_spawn_manager():add(obj.id, -1, change_exo_cond, cond)
		news_manager.send_tip("Апгрейд закончен.", nil, "nano", 10000)
		for i=1,2 do
			AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
		end
	else
		amk.spawn_item_in_inv("doc_1")
	end
end

function update_spawn_2()
	AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
end

function doc_use_2()
	local e2 = actor:object("exo_mil_exoskeleton_add")
	if e2 then
		local cond = e2:condition()
		AI:release(AI:object(e2:id()))
		local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_addr")
		level.client_spawn_manager():add(obj.id, -1, change_exo_cond, cond)
		news_manager.send_tip("Апгрейд закончен.", nil, "nano", 10000)
	else
		amk.spawn_item_in_inv("doc_8")
	end
end


function doc_use_3()
	local e3 = actor:object("exo_mil_exoskeleton_addr")
	if e3 then
		local cond = e3:condition()
		AI:release(AI:object(e3:id()))
		local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_addrs")
		level.client_spawn_manager():add(obj.id, -1, change_exo_cond, cond)
		news_manager.send_tip("Апгрейд закончен.", nil, "nano", 10000)
	else
		amk.spawn_item_in_inv("doc_10")
	end
end

function spawner()
	AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
end

function system_outfit( t )
	if not has_alife_info( t.info ) then return end

	if t.check() or t.need_treat then
		t.f = nil t.f_end = nil
		return 
	end

	if not t.f then
		news_manager.send_tip("%c[gray2]СИСТЕМА ЖИЗНЕННОЙ ПОДДЕРЖКИ:\\n%c[red_sms]"..t.sms_warning, nil, "nano", 5000)
		t.f = true
	end

	if not t.f_end then
		t.need_treat = true
		for i,v in ipairs( t.drugs ) do
			if actor:object( v ) then
				shiftCheckDropItem()
				actor:eat( actor:object( v ) )
				t.need_treat = nil
				xr_s.subscribe( "update", function( delta, tt )
					if not tt.check() then
						tt.f_end = nil
					end
				end,
				{ timeout = 600, userobj = t, once = true } )
				break
			end
		end

		if t.need_treat then
			if not t.reg then
				t.check_take_drugs = function( item, tt )
					if table.find( tt.drugs, item:section() ) then
						tt.need_treat = nil
					end
				end
				xr_s.subscribe( "item_take", t.check_take_drugs, { userobj = t } )
				t.reg = true
			end
			do_heal( false, t.sms_fail )
		else
			if t.reg then
				xr_s.unsubscribe( "item_take", t.check_take_drugs )
				t.check_take_drugs = nil
				t.reg = nil
			end
			do_heal( true, t.sms_ok )
		end
		t.f_end = true
	end
end


function exo_in_section(item)
	local itm = item:section()
	if itm == "exo_mil_exoskeleton_addr" then
		AI:create(itm, actor:position(), actor:level_vertex_id(), actor:game_vertex_id(), actor:id())
		AI:release(AI:object(item:id()))
	end
end

function dbglog(fmt,...)    
	local msg = string.format(fmt, ...)    
	local msg_no_ws = string.gsub(msg, "%s", "_" )    
	get_console():execute("dbg:" .. msg_no_ws)
end

function do_heal(a,str)
	if a then
		play_snd([[meceniy\outfit\est_med]])
	else
		play_snd([[meceniy\outfit\net_med]])
	end
	news_manager.send_tip("%c[gray2]СИСТЕМА ЖИЗНЕННОЙ ПОДДЕРЖКИ:\\n%c[red_sms]"..str, nil, "nano", 5000)
end

function play_snd(snd)
	local snd_obj = xr_sound.get_safe_sound_object(snd)
	snd_obj:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
end
