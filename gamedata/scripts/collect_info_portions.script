-- -*- mode: lua; encoding: windows-1251 -*-
-----------------------------------------------------------------------------------------
-- File			: collect_info_portions.script
-- Description	: Чтение инфопорций из конфигов
-- Created		: 28.09.2018
-- Last update	: 03.03.2019 /адаптация к ОП-2.1/
-- Author		: naxac
-----------------------------------------------------------------------------------------

function main( rewrite )
	if _G.cheat_base == nil
		or _G.cheat_base.list_info == nil
		or rewrite
	then
		local info_portions = {}
		local files = {}
		if _G.cheat_base == nil then _G.cheat_base = {} end
		_G.cheat_base.list_info = {}
		_G.cheat_base.list_info.info_portions = info_portions
		_G.cheat_base.list_info.files = files

		local str = system_ini():r_string( "info_portions", "files" )
		for s in string.gmatch( str, "[%w_]+" ) do
			table.insert( files, s )
		end

		local fs = getFS()
		local p
		for i, f  in ipairs( files ) do
			p = "gameplay\\"..f..".xml"
			ex = fs:exist( "$game_config$", p )
			if not ex then
				info_portions[ f ] = "File not exist"
				log( "! %s: Error! File not found: [%s]", script_name(), p )
			elseif ex.modif == 0 then
				info_portions[ f ] = "File don't unpack"
				log( "! %s: folder 'config' hasn't full unpack! File not found: [%s]", script_name(), p )
			else
				local file = fs:r_open( "$game_config$", p )
				info_portions[ f ] = {}
				log( "parse file %s", p )
				parse_file( file:r_stringZ(), info_portions[ f ] )
			end
		end

		local info_count = 0
		for k, v in pairs( info_portions ) do
			if type( v ) == "table" then
				info_count = info_count + #v
			end
		end
		_G.cheat_base.list_info.info_count = info_count
		table.print( _G.cheat_base.list_info )
	end
end

function parse_file( str, tbl )
	-- удалим комментарии
	local n
	str, n = string.gsub( str, "<!%-%-.-%-%->", "" )
--	log( "delete %s comments", n )
	str, n = string.gsub( str, "%s*/>", "></info_portion>" )
--	log( "correct %d tags", n )

	for info, chck_str in string.gmatch( str, '<info_portion%s+id=(%b"")>(.-)</info_portion>' ) do
		local t = {}
		t.info = info:sub( 2, -2 )
	--	log( "found info: %s", t.info )
		if chck_str then
			-- ищем внутренние тэги (таски, артиклы и т.д.)
			for tag, sss, end_tag in string.gmatch( chck_str, "<([%w_]+)>([%w%.%-_]+)</([%w_]+)>" ) do
	--			log( "read tags [ %s : %s : %s ]", tag, sss, end_tag )
				if t[ tag ] == nil then
					t[ tag ] = {}
				end
				table.insert( t[ tag ], sss )
			end
		end
		table.insert( tbl, t )
	end
end
