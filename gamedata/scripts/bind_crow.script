-- -*- mode: lua; encoding: windows-1251 -*-
--[[---------------------------------------------------------------------------------------------------------------------------------
 File			: bind_crow.script
 Description	: Биндер ворон - озвучка, и подбираемые тушки.
 Copyright		: 2013 © boryan67
 Author			: boryan67 - scripts & mauvais - sounds
 Last edit		: 15.08.2013
--]]------------------------------------------------------------------------------------------------------------------------------------
-- озвучка выкинута - ее все равно не слышно, только апдейт грузит.
-- уровни, на которых респавнятся вороны: имя_уровня = максимальное количество
local level_for_crows = {
	l01_escape = 15,
	l02_garbage = 15,
	l03_agroprom = 10,
	l04_darkvalley = 15,
	l05_bar = 9,
	l06_rostok = 9,
	l08_yantar = 5,
	l07_military = 15,
	l10_radar = 5,
	l11_pripyat = 7,
	atp_for_test22 = 10,
	puzir = 15,
	aver = 12,
	limansk = 10,
	generators = 15,
	red_forest = 15,
	lost_village = 10,
	marsh = 15,
	dead_city = 15,
	zaton = 15,
	jupiter = 15,
	pripyat = 15,
	l41_darkscape_ogse = 15
}
local level_crows = {}

function init(obj)
	obj:bind_object(crow_binder(obj))
end

class "crow_binder" (object_binder)

function crow_binder:__init(obj) super(obj)
end

function crow_binder:net_spawn(data)
	if not object_binder.net_spawn(self, data) then
		return false
	end

	level_crows[self.object:id()] = self

	return true
end

function crow_binder:net_destroy()
	level_crows[self.object:id()] = nil

	object_binder.net_destroy(self)
end

function crow_binder:update(delta)
	object_binder.update(self, delta)
	
	if not self.object:alive() and not self.dead then
		self.dead = true

		if not amk.has_variable("blowout") then
			-- удалим ворону и заспавним тушку
			AI:release(AI:object(self.object:id()))
			AI:create("mutant_crow", self.object:position(), self.object:level_vertex_id(), self.object:game_vertex_id())
		end
	end
end


function blowout_hit()
	local cr
	local h = hit()
	h.type = hit.strike
	h.power = 1000
	h.impulse = 1000
	for id, binder in pairs(level_crows) do
		cr = binder.object
		if cr and cr:alive() and math.random() < 0.7 then
			h.draftsman = cr
			h.direction = cr:direction()
			cr:hit(h)
		end
	end
end

function respawn_crows()
	if  table.size(level_crows) < (level_for_crows[level.name()] or 0) then
		AI:create("m_crow", vector():set(0,0,0), Actor:level_vertex_id(), Actor:game_vertex_id())
		start_small_timer(30000, bind_crow.respawn_crows)
		log("- bind_crow: spawn m_crow")
	end
	log("[bind_crow.respawn_crows]: crows count: %s", table.size(level_crows))
end

function attach()
	if level.name() == "l10_radar" and not has_alife_info("bar_deactivate_radar_done") then
		return
	end
	xr_timers.get_mgr():start_small_timer(30000, bind_crow.respawn_crows)
end
