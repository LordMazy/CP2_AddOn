-- -*- mode: lua; encoding: windows-1251 -*-
local current_ballast_weight = 0
local ballast_num = 0

function check_ballast()
	local n = math.floor( math.clamp(current_ballast_weight*100, 0, 50000) )
	if (n ~= ballast_num) then
		local obj = db.actor:object("wpn_ballast")
		if obj then
			obj:set_ammo_elapsed(n)
			ballast_num = n
			db.actor:invalidate_inventory()
		--	update_inventory_window()
		else		-- if first run
			log1("# spawn wpn_ballast")
			local a = db.actor
			local sobj = alife():create("wpn_ballast", a:position(),
				a:level_vertex_id(), a:game_vertex_id(), a:id())
			level.client_spawn_manager():add(sobj.id, 0, 
				function (num, id, lobj)
					lobj:set_ammo_elapsed(num)
				end,
			n)
		end
	end
end

function change_ballast(delta)
	current_ballast_weight = current_ballast_weight + delta
end

function check_volatile_item(item, mul)
--	if alife():object( item:id() ) ~= nil then
		local binder = item:binded_object()
		if binder and binder:get_charge_level() > 0 then
			local accum_sect = sys_ini:r_string( item:section(), "energy_source" )
			change_ballast( mul * sys_ini:r_float( accum_sect, "inv_weight" ) )
		end
--	end
end
