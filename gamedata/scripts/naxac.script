-- -*- mode: lua; encoding: windows-1251 -*-
local current_fix = 6

function fix_6()
	-- переспавним награду от Лукаша за мозги контролёра в рюкзак
	local sect, obj
	local need_spawn = false
	for i = 1, 65535 do
		obj = AI:object(i)
		if obj then
			sect = obj:section_name()
			if (sect == "arhara_tele" or sect == "meceniy_outfit_new" or sect == "wpn_aa12")
				and obj.parent_id == 65535 and object_level_name(obj) == "l12u_sarcofag"
			then
				AI:release(obj, true)
				need_spawn = true
			end
		end
	end
	if need_spawn then
		arhara_dialog.arhara_teleport()
	end
end
function fix_5()
	Actor:give_info_portion("task_save_fix")
	-- Уберём ненужный рестриктор и исправим радио Василию на болотах
	local obj = AI:object("marsh_moroz_restrictor")
	if obj then
		AI:release(obj, true)
		if AI:object("marsh_vasilij_radio") == nil then
			netpk:create_restrictor(
				vector():set(-136.51177978516,4.1848711967468,-305.32223510742),
				77674, 3374, 
				"[logic]\ncfg = scripts\\marsh\\vasilij_radio.ltx",
				1.0
			)
		end
	end
end
function fix_4()
	-- поправим переход Кордон - Болота
	local obj = AI:object("escape_to_marsh")
	if obj then
		local data = {
			dest_direction = vector():set(0,1.1001601219177,0),
			shapes = {
				{ shtype = 0, center = vector():set(0,0,0), radius = 1.2 }
			}
		}
		netpk:modify(obj, data, netpk.fState)
	end
	-- поправим переход Болота - Кордон
	obj = AI:object("mar_level_changer_to_escape_1")
	if obj then
		local data = {
			dest_game_vertex_id = 41,
			dest_level_vertex_id = 8615,
			dest_position = vector():set(-253.77577209473,-14.679865837097,-194.29989624023)
		}
		netpk:modify(obj, data, netpk.fState)
	end
end
function fix_3()
	-- исправим рестриктор в Х-16 - стобы при отключенной установке не пищало в голове
	naxac.rewrite_restr_logic( "yantar_psi_radiotion_sound", "scripts\\yan\\yantar_psi_radiotion_sound.ltx" )
	-- уберём сделавшую своё дело мину на Янтаре
	local obj = AI:object("yantar_arhara_mine1")
	if obj and has_alife_info("sms_barmen_otvet") then
		AI:release(obj, true)
	end
end
function fix_2()
	--Если переходов в Тёмную Лощину нет, значит локацию только добавили - нужно заспавнить её содержимое
	if AI:story_object(story_ids.lc_darkscape_to_escape) == nil
		and AI:story_object(story_ids.lc_darkscape_to_darkvalley) == nil
	then
		-- спавним по номеру секции в спавне: придётся обновлять каждый раз при редактировании спавна.
		for i = 12412, 12537, 1 do
			AI:create(i)
		end
		-- отметим переходы
		local obj = AI:story_object(story_ids.lc_darkscape_to_escape)
		if obj then
			level.map_add_object_spot_ser(obj.id, "level_changer4", "to_escape")
		end
		obj = AI:story_object(story_ids.lc_darkscape_to_darkvalley)
		if obj then
			level.map_add_object_spot_ser(obj.id, "level_changer1", "to_darkvalley")
		end
		-- переспавним переходы ТД-Кордон и Кордон-ТД: теперь это ТД-ТЛ и Кордон-ТЛ
		obj = AI:story_object(story_ids.lc_escape_to_darkscape)
		if obj then
			AI:release(obj, true)
			obj = AI:create( AI:spawn_id(story_ids.lc_escape_to_darkscape) )
			level.map_add_object_spot_ser(obj.id, "level_changer2", "to_darkscape")
		end
		obj = AI:story_object(story_ids.lc_darkvalley_to_darkscape)
		if obj then
			AI:release(obj, true)
			obj = AI:create( AI:spawn_id(story_ids.lc_darkvalley_to_darkscape) )
			level.map_add_object_spot_ser(obj.id, "level_changer3", "to_darkscape")
		end
		-- телепорт к дому
		AI:create("darkscape_teleport_01",vector():set(-248.57592773438,12.540954589844,-329.14068603516),139494,3997)
	end
end
function fix_1()
	local obj
	if not has_alife_info( "naxac_test_repair5" ) then
		Actor:give_info_portion( "naxac_test_repair5" )
		-- удаляем ставший не нужным балласт от контеёнеров с артефактами
		Actor:iterate_inventory(function(dummy, item)
			if item:section() == "wpn_ballast" then
				obj = AI:object(item:id())
				if obj then AI:release(obj, true) end
			end
		end,
		Actor)
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair4" ) then
		Actor:give_info_portion( "naxac_test_repair4" )

		obj = AI:object("radar_kukla")
		if obj then
			AI:create("kukla_1",vector():set(-10.734,0.198,-54.009),7084,1960)
			AI:release(obj, true)
		end

		obj = snp.object_by_section_offline("good_psy_helmet1")
		if obj then
			if obj.parent_id == 65535 then
				AI:create("good_psy_helmet", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id)
			else
				AI:create("good_psy_helmet", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.parent_id)
			end
			AI:release(obj, true)
		end
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair3" ) then
		Actor:give_info_portion( "naxac_test_repair3" )
		-- правим замену артов в Госпитале
		obj = AI:object( "podlovim_chiterov_restrictor" )
		if obj then AI:release( obj, true ) end
		obj = AI:object( "podlovim_chiterov1_restrictor" )
		if obj then AI:release( obj, true ) end
		start_small_timer( 2000, naxac.rewrite_restr_logic, "hos_zamena_art_restrictor", "scripts\\hospital\\hos_zamena_art_restrictor.ltx" )
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair2" ) then
		Actor:give_info_portion( "naxac_test_repair2" )
		-- меняем имя ГГ, если встреча с Доктором уже была
		if has_alife_info( "cit_fail_first_task" ) then
			naxac.hero_rename_start()
		end
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair1" ) then
		Actor:give_info_portion( "naxac_test_repair1" )

		if AI:object( "subway_scaner_doc_0001" ) == nil then
			AI:create( "subway_scaner_doc", vector():set(-28.548599243164,-10.811845779419,-25.668081283569),517,1152 )
		end
	end
end

function repair()
	local fix = amk.load_variable("nfx", 0)
	if fix == current_fix then return end

	amk.save_variable( "nfx", current_fix )

	for i = current_fix, 1, -1 do
		if fix >= i then break end
		this["fix_"..tostring(i)]()
	end
end

---------------------------------------------------------------------------------------
function treasure_ss_1()
	local items = {
		['subway_scaner_doc2'] = 1
	}
	naxac.create_treasure( vector():set( -394.92098999023,0.49698415398598,52.124488830566 ), 146089, 3664, items )
end
function treasure_ss_2()
	local obj = AI:create( "inventory_box", vector():set(447.53710449219,31.134944915771,-455.5447265625),1427937,3745)
	local code = ""
	for i = 1,10 do
		code = code..tostring( math.random( 0, 9 ) )
	end
	local t = {}
	t.visual_name = "physics\\equipment_cache\\equipment_seif_01_case"
	t.custom_data = "[logic]\n"..
					"cfg = scripts\\code_inventory_box.ltx\n"..
					"[password]\n"..
					"code = "..code
	netpk:modify( obj, t, netpk.fState )
	obj = AI:object( obj.id )
	obj:use_ai_locations( false )

	AI:create( "zamok", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
	AI:create( "device_scaner", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
end
function ss_teleports()
	AI:create( "ss_tele_1", vector():set(-427.43768310547,35.865772247314,-323.46566772461),137286,3664)
	AI:create( "ss_tele_2", vector():set(-418.9528503418,0.43205073475838,17.969646453857),146089,3664)
	AI:create( "ss_tele_3", vector():set(-394.98583984375,0.49851682782173,56.047332763672),146089,3664)
end
function del_ss_teleports()
	bind_mteleport.del_teleport( "ss_tele_1" )
	bind_mteleport.del_teleport( "ss_tele_2" )
	bind_mteleport.del_teleport( "ss_tele_3" )
end

-- Чтобы после первого посещения ЧАЭС переход"Припять - ЧАЭС" задавал вопрос о смене уровня
function lc_question_add()
	-- Припять - ЧАЭС
	local obj = AI:story_object(story_ids.lc_pripyat_to_aes)
	if obj then
		local t = { silent_mode = 0 }
		netpk:modify(obj, t, netpk.fState)
	end
end

-- Спавним тайник Сыча в Х-10
function treasure_sysh_spawn()
	local items = {
		['ammo_gauss'] = 1,
		['sysh_document'] = 1,
		['antirad'] = 4,
		['medkit_scientic'] = 2,
		['af_kol_4'] = 1
	}
	local hint = "%c[255,238,155,23]Тайник Сыча\\n%c[default]На флешке Сыча была информация о схроне в лаборатории X-10, надо бы его проверить."
	naxac.create_treasure( vector():set(-1.9939445257187,-34.253723144531,27.17742729187),
		4256, 2777, items, "treasure", hint)
end

-- Запускаем фриплей
function after_credits()
	-- не знаю, зачем это, но пусть будет
	if not db.gameover_credits_started then return end
	db.gameover_credits_started = nil

	if not has_alife_info("snp_rings_done") then
		get_console():execute("main_menu on")
		get_console():execute("disconnect")
		return
	end

	if not has_alife_info("naxac_freeplay_start") then
		Actor:give_info_portion("naxac_freeplay_start")
		
		local not_del = {
			["bolt"] = true,
			["wpn_binoc"] = true,
			["device_pda"] = true,
			['netpacket_pda'] = true,
			["device_torch"] = true
		}
		local obj
		Actor:iterate_inventory(function(actor, item)
			obj = AI:object(item:id())
			if obj and not_del[item:section()] == nil then
				AI:release(obj, true)
			end
		end,
		Actor)
		
		Actor:give_money(1000-Actor:money())
		
		level.disable_input()
		start_small_timer(2000, this.tele_to_escape)
	end
end
function tele_to_escape()
	u3_utils.savegame("Финал")
	start_small_timer(3000, function () teleport_manager.jumpTo("exit_ao2") end)
end
------------------------------------------------------------------------------------------
-- Перезаписываем логику рестриктора, если он в онлайне - переинициализируем
function rewrite_restr_logic( obj_name, logic )
	local obj = AI:object( obj_name )
	if obj then
		local cd = logic and "[logic]\ncfg = "..logic or ""
		netpk:modify( obj, {custom_data =	cd}, netpk.fState )
		local rest = level.object_by_id( obj.id )
		if rest then
			local st = db.storage[rest:id()]
			st = {}
			xr_logic.initialize_obj( rest, st, false, Actor, modules.stype_restrictor, (logic or "scripts\\dummy.ltx") )
		end
	end
end

-- Закрываем тайник на замок
function close_lock_box(box_id, code)
	local se_box = AI:object(box_id)
	if se_box == nil then
		log("! [naxac.close_lock_box]: box [%s] not found!", box_id)
		return
	end

	-- если пароль не задан, то сгенерируем случайный из семи цифр
	if code == nil then
		code = ""
		for i = 1,7 do
			code = code..tostring( math.random(0,9) )
		end
	end

	local data = netpk:get(se_box, netpk.fState)
	local cd = netpk:parse_custom_data(data.custom_data)
	cd.password = { code = code }
	cd.logic = { cfg = "scripts\\code_inventory_box.ltx" }
	data.custom_data = netpk:gen_custom_data(cd)
	netpk:set(se_box, data)
	zamok.restore(se_box, 1, code)

	local box = level.object_by_id(box_id)
	if box then
		local zz = AI:create( "zamok", Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id(), Actor:id() )
		start_small_timer(500, function()
			local obj = level.object_by_id(zz.id)
			if obj then
				Actor:transfer_item(obj, box)
			end
		end)
		local st = db.storage[box_id]
		st = {}
		xr_logic.initialize_obj(box, st, false, Actor, modules.stype_item, "scripts\\code_inventory_box.ltx")
	else
		AI:create( "zamok", se_box.position, se_box.m_level_vertex_id, se_box.m_game_vertex_id, box_id )
	end

	return code
end

-- Спавним тайник по заданным координатам
function create_treasure( pos, lv, gv, items, mapspot, hint )
	local ruck = AI:create( "m_inventory_box", pos, lv, gv )

	local id = ruck.id
	for sect, n in pairs(items) do
		for i = 1, n do
			AI:create(sect, pos, lv, gv, id)
		end
	end

	local t = netpk:get( ruck, netpk.fState )
	t.custom_data  = "[logic]\n".."cfg = scripts\\new_inventory_box.ltx"
	t.object_flags = bit_and( t.object_flags, bit_not(197) )
	netpk:set( ruck, t )
	ruck = AI:object( id )
	ruck:use_ai_locations( false )

	if mapspot then
		level.map_add_object_spot_ser( id, mapspot, (hint or "Тайник") )
	end
	return ruck
end
-----------------------------------------------------------------------------------------------
local pi = math.pi
local pi2 = pi*2
local chk_sec = pi2/16
function angle_clamp(angle)
	if angle < 0 then
		return angle + pi2
	elseif angle > pi2 then
		return angle - pi2
	else
		return angle
	end
end
-- проверка для логики: с той ли стороны мы приближаемся к объекту,
-- проверяется сектор 45% по заданному углу поворота
-- 0 - с востока, 1/2*pi - с севера, pi - с запада, 3/2*pi - с юга
-- on_info = {=naxac.check_direction(2.89)}
function check_direction(actor, npc, p)
	local check_angle = tonumber( p[1] )
	local angle = actor:position():sub(npc:position()):getH() + pi/2
	local chk_max = angle_clamp(check_angle + chk_sec)
	local chk_min = angle_clamp(check_angle - chk_sec)
--	log("[naxac.check_direction]: check_angle = %s, angle = %s, min = %s, max = %s", check_angle, angle, chk_min, chk_max)
	if chk_max < chk_min then
		return not (chk_max < angle and chk_min > angle)
	end
	return chk_max > angle and chk_min < angle
end
-----------------------------------------------------------------------------------------------
-- Изменение имени ГГ
local new_name = nil
function hero_rename_start()
	new_name = "Стрелок"
	netpk:modify( AI:actor(), { character_name = new_name }, netpk.fState )	-- запишем новое имя в серверный объект актёра
end
function hero_rename( pk )
	if not new_name then return end
	-- запишем новое имя в клиентский объект актёра, смещение [39]
	local t = {}
	pk:r_seek(0)
	table.insert( t, pk:r_u16() )		-- 2 байта
	for i = 1,37 do
		table.insert( t, pk:r_u8() )	-- + ещё 37 раз по 1
	end
	local n = pk:r_stringZ()			-- читаем имя
--	log( "old name of hero: [%s]", n )
	table.insert( t, new_name )			-- сохраняем вместо старого новое
	while not pk:r_eof() do				-- вычитываем остаток пакета побайтово
		table.insert( t, pk:r_u8() )
	end

	pk:w_begin(t[1])					-- теперь записываем всё обратно
	for i = 2, #t, 1 do
		n = t[i]
		if type( n ) == "string" then
			pk:w_stringZ( n )
		else
			pk:w_u8( n )
		end
	end

	log( "- New name of hero successfully saved" )
end
----------------------------------------------------------------------------------
-- by Shadows aka Ray Twitty
function camera_rotate_on_position(pos, speed, action, ...)
	if pos and speed >= 1 and speed <= 20 then
		local args = {...}
		local dev = device()
		local current_dir = dev.cam_dir:mul(level.get_target_dist())
		local end_dir = pos:sub(dev.cam_pos)
		local current_angle = -current_dir:getH()
		local end_angle = -end_dir:getH()
		if vector():crossproduct(end_dir, dev.cam_dir).y > 0 then
			speed = -speed
		end
		level.add_call(
			function()
				if current_angle > 1.57 then
					current_angle = -4.71
				elseif current_angle < -4.71 then
					current_angle = 1.57
				end
				current_angle = current_angle + speed / 1000
				Actor:set_camera_direction(vector():set(current_angle, 0, 0))
				return math.abs(current_angle - end_angle) < 0.01
			end,
			function()
				if action then
					loadstring("return function(args) "..action.."(unpack(args)) end")()(args)
				end
			end
		)
	end
end

----------------------------------------------------------------------------------
local rnd_tbl = {}

function get_precondition_rnd(count, name, reset)
	local t = rnd_tbl[name]
	if t == nil then
		t = {}
		rnd_tbl[name] = t
		t.num = nil
	end

	local ret = t.num
	if ret == nil then
		ret = math.random( 1, count )
		t.num = ret
	end

	if reset then
		t.count = (t.count or 0) + 1
		if t.count == count then
			t.num = nil
			t.count = 0
		end
	end

	return ret
end
-- Гарик, смена фраз
function bar_guard_precond_1(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 1
end
function bar_guard_precond_2(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 2
end
function bar_guard_precond_3(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 3
end
