
function add_location(sid, location, hint)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		
		if obj then
			if hint then
				level.map_add_object_spot(obj.id, location, hint)
			else
				level.map_add_object_spot(obj.id, location, "")
			end
		end
	end
end

function remove_location(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) then
			level.map_remove_object_spot(obj.id, location)
		end
	end
end

function remove_location_safe(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
		   for a = 1, level.map_has_object_spot(obj.id, location), 1 do
			   level.map_remove_object_spot(obj.id, location)
		   end	
		end
	end
end

function is_map_spot_present(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end

function add_lchanger_location()
	local lv_changers = {
		[story_ids.esc_exit_to_garbage_01] = { 1, "to_garbage" },
		[story_ids.gar_exit_to_agroprom_02] = { 4, "to_agroprom" },
		[story_ids.gar_exir_to_escape] = { 3, "to_escape" },
		[story_ids.gar_exit_to_bar] = { 1, "to_bar" },
		[story_ids.gar_exit_to_darkvalley_high] = { 2, "to_darkvalley" },
		[story_ids.agr_exit_to_garbage_02] = { 2, "to_garbage" },
		[story_ids.val_lvl_changer2] = { 2, "to_garbage" },
		[story_ids.val_lvl_changer3] = { 2, "to_escape" },
		[story_ids.bar_exit_to_garbage] = { 3, "to_garbage" },
		[story_ids.bar_exit_to_rostok] = { 5, "bar_rostok" },
		[story_ids.rostok_exit_to_yantar] = { 3, "to_yantar" },
		[story_ids.Mil_Exit_to_Bar] = { 4, "to_bar" },
		[story_ids.Mil_Exit_to_Radar] = { 2, "to_radar" },
		[story_ids.pri_exit_to_aes] = { 1, "to_aes" },
		[story_ids.pri_exit_to_radar] = { 3, "to_radar" },
		[story_ids.yan_exit_to_rostok] = { 2, "to_rostok" },
		[story_ids.rad_exit_to_pripyat] = { 1, "to_pripyat" },
		[story_ids.exit_to_pripyat_from_st1] = { 3, "to_pripyat" },
		[story_ids.exit_to_puzir_from_garbage] = { 3, "to_puzir" },
		[story_ids.to_td_level_changer_from_puzir] = { 2, "to_darkvalley" },
		[story_ids.aver_level_changer_to_svalka] = { 3, "to_garbage" },
		[story_ids.aver_level_changer_to_darkvalley] = { 2, "to_darkvalley" },
		[story_ids.aver_level_changer_to_military] = { 1, "to_military" },
		[story_ids.exit_to_red_forest_from_limansk] = { 3, "to_red_forest" },
		[story_ids.exit_to_lost_village] = { 1, "to_hospital" },
		[story_ids.exit_to_generators_from_hospital] = { 1, "to_limansk" },
		[story_ids.gener_to_warlab_level_changer] = { 3, "to_warlab" },
		[story_ids.red_level_changer_to_atp] = { 3, "to_atp" },
		[story_ids.red_level_changer_to_limansk] = { 4, "to_limansk" },
		[story_ids.red_level_changer_to_radar] = { 1, "to_radar" },
		[story_ids.red_level_changer_to_puzir] = { 2, "to_puzir" },
		[story_ids.mar_level_changer_to_escape_1] = { 2, "to_escape" },
		[story_ids.mar_level_changer_to_escape_2] = { 2, "to_escape" },
		[story_ids.mar_level_changer_to_agroprom_1] = { 1, "to_agroprom" },
		[story_ids.to_svalka_level_changer_from_puzir] = { 1, "to_garbage" },
		[story_ids.exit_to_bar_01] = { 1, "bar_rostok" },
		[story_ids.zaton_to_escape] = { 4, "to_escape" }
	}

	local sim = alife()
	local add_spot =level.map_add_object_spot_ser
	local obj
	for sid, t in pairs(lv_changers) do
		obj = sim:story_object(sid)
		if obj then
			add_spot( obj.id, "level_changer"..tostring( t[1] ), t[2] )
		end
	end
end


function set_task_state(id_state, id_task, id_subtask)
	if db.actor then
		db.actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
