
function add_location(sid, location, hint)
	if AI then
		local obj = AI:story_object(sid)
		
		if obj then
			if hint then
				level.map_add_object_spot(obj.id, location, hint)
			else
				level.map_add_object_spot(obj.id, location, "")
			end
		end
	end
end

function remove_location(sid, location)
	if AI then
		local obj = AI:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) then
			level.map_remove_object_spot(obj.id, location)
		end
	end
end

function remove_location_safe(sid, location)
	if AI then
		local obj = AI:story_object(sid)
		if obj then
		   for a = 1, level.map_has_object_spot(obj.id, location), 1 do
			   level.map_remove_object_spot(obj.id, location)
		   end	
		end
	end
end

function is_map_spot_present(sid, location)
	if AI then
		local obj = AI:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end

--[[----------------
	1 - up
	2 - right
	3 - down
	4 - left
	5 - underground
--]]----------------
function add_lchanger_location()
	local lv_changers = {
		[story_ids.lc_escape_to_garbage]				= { 1, "to_garbage" },
		[story_ids.lc_garbage_to_agroprom]				= { 4, "to_agroprom" },
		[story_ids.lc_garbage_to_escape]				= { 3, "to_escape" },
		[story_ids.lc_garbage_to_bar]					= { 1, "to_bar" },
		[story_ids.lc_garbage_to_darkvalley]			= { 2, "to_darkvalley" },
		[story_ids.lc_agroprom_to_garbage]				= { 2, "to_garbage" },
		[story_ids.lc_darkvalley_to_garbage]			= { 4, "to_garbage" },
		[story_ids.lc_darkvalley_to_escape]				= { 3, "to_escape" },
		[story_ids.lc_bar_to_garbage]					= { 3, "to_garbage" },
		[story_ids.lc_bar_to_rostok]					= { 5, "bar_rostok" },
		[story_ids.lc_rostok_to_bar]					= { 1, "bar_rostok" },
		[story_ids.lc_rostok_to_yantar]					= { 3, "to_yantar" },
		[story_ids.lc_military_to_bar]					= { 4, "to_bar" },
		[story_ids.lc_military_to_radar]				= { 2, "to_radar" },
		[story_ids.lc_pripyat_to_aes]					= { 1, "to_aes" },
		[story_ids.lc_pripyat_to_radar]					= { 3, "to_radar" },
		[story_ids.lc_yantar_to_rostok]					= { 2, "to_rostok" },
		[story_ids.lc_radar_to_pripyat]					= { 1, "to_pripyat" },
		[story_ids.lc_aes_to_pripyat]					= { 3, "to_pripyat" },
		[story_ids.lc_garbage_to_puzir]					= { 3, "to_puzir" },
		[story_ids.lc_puzir_to_darkvalley]				= { 2, "to_darkvalley" },
		[story_ids.lc_aver_to_svalka]					= { 3, "to_garbage" },
		[story_ids.lc_aver_to_darkvalley]				= { 2, "to_darkvalley" },
		[story_ids.lc_aver_to_military]					= { 1, "to_military" },
		[story_ids.lc_limansk_to_red_forest]			= { 3, "to_red_forest" },
		[story_ids.lc_limansk_to_hospital]				= { 1, "to_hospital" },
		[story_ids.lc_hospital_to_limansk]				= { 1, "to_limansk" },
		[story_ids.lc_generators_to_warlab]				= { 3, "to_warlab" },
		[story_ids.lc_red_forest_to_atp]				= { 3, "to_atp" },
		[story_ids.lc_red_forest_to_limansk]			= { 4, "to_limansk" },
		[story_ids.lc_red_forest_to_radar]				= { 1, "to_radar" },
		[story_ids.lc_red_forest_to_puzir]				= { 2, "to_puzir" },
		[story_ids.lc_marsh_to_escape_1]				= { 2, "to_escape" },
		[story_ids.lc_marsh_to_escape_2]				= { 2, "to_escape" },
		[story_ids.lc_marsh_to_agroprom]				= { 1, "to_agroprom" },
		[story_ids.lc_puzir_to_garbage]					= { 1, "to_garbage" },
		[story_ids.lc_zaton_to_escape]					= { 4, "to_escape" }
	}

	local add_spot =level.map_add_object_spot_ser
	local obj
	for sid, t in pairs(lv_changers) do
		obj = AI:story_object(sid)
		if obj then
			add_spot( obj.id, "level_changer"..tostring( t[1] ), t[2] )
		end
	end
end


function set_task_state(id_state, id_task, id_subtask)
	if db.actor then
		db.actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
