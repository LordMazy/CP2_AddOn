-- -*- mode: lua; encoding: windows-1251 -*-
function ggg()
	local obj = level.get_target_obj()
	if obj then log( obj:name() ) end
end

function repair()
	if has_alife_info( "naxac_test_repair3" ) then return end
	db.actor:give_info_portion( "naxac_test_repair3" )

	local sim = alife()
	local obj = sim:object( "podlovim_chiterov_restrictor" )
	if obj then sim:release( obj, true ) end
	obj = sim:object( "podlovim_chiterov1_restrictor" )
	if obj then sim:release( obj, true ) end
	start_small_timer( 2000, naxac_test.rewrite_restr_logic, "hos_zamena_art_restrictor", "scripts\\hospital\\hos_zamena_art_restrictor.ltx" )

	if not has_alife_info( "naxac_test_repair2" ) then
		db.actor:give_info_portion( "naxac_test_repair2" )

		if has_alife_info( "cit_fail_first_task" ) then
			this.hero_rename_start()
		end
	end

	if not has_alife_info( "naxac_test_repair1" ) then
		db.actor:give_info_portion( "naxac_test_repair1" )

		local sim = alife()
		if sim:object( "subway_scaner_doc_0001" ) == nil then
			sim:create( "subway_scaner_doc", vector():set(-28.548599243164,-10.811845779419,-25.668081283569),517,1152 )
		end
	end
end

function after_credits()
	-- не знаю, зачем это, но пусть будет
	if not db.gameover_credits_started then return end
	db.gameover_credits_started = nil

	if not has_alife_info("snp_rings_done") then
		get_console():execute("main_menu on")
		get_console():execute("disconnect")
		return
	end

	if not has_alife_info("naxac_freeplay_start") then
		db.actor:give_info_portion("naxac_freeplay_start")
		
		local not_del = {
			["bolt"] = true,
			["wpn_binoc"] = true,
			["device_pda"] = true,
			['netpacket_pda'] = true,
			["device_torch"] = true
		}
		local sim = alife()
		local obj
		db.actor:iterate_inventory(function(actor, item)
			obj = sim:object(item:id())
			if obj and not_del[item:section()] == nil then
				sim:release(obj, true)
			end
		end,
		db.actor)
		
		db.actor:give_money(1000-db.actor:money())
		
		level.disable_input()
		start_small_timer(2000, this.tele_to_escape)
	end
end
function tele_to_escape()
	u3_utils.savegame("Финал")
	start_small_timer(3000, function () spawn_level_changer.jumpTo("exit_ao2") end)
end

function treasure_sysh_spawn()
	local items = {
		['ammo_gauss'] = 1,
		['sysh_document'] = 1,
		['antirad'] = 4,
		['medkit_scientic'] = 2,
		['af_kol_4'] = 1
	}
	local hint = "%c[255,238,155,23]Тайник Сыча\\n%c[default]На флешке Сыча была информация о схроне в лаборатории X-10, надо бы его проверить."
	naxac_test.create_treasure( vector():set(-1.9939445257187,-34.253723144531,27.17742729187),
		4256, 2777, items, "treasure", hint)
end

function treasure_ss_1()
	local items = {
		['subway_scaner_doc2'] = 1
	}
	naxac_test.create_treasure( vector():set( -394.92098999023,0.49698415398598,52.124488830566 ), 146089, 3664, items )
end
function treasure_ss_2()
	local sim = alife()
	local obj = sim:create( "inventory_box", vector():set(447.53710449219,31.134944915771,-455.5447265625),1427937,3745)
	local code = ""
	for i = 1,10 do
		code = code..tostring( math.random( 0, 9 ) )
	end
	local t = {}
	t.visual_name = "physics\\equipment_cache\\equipment_seif_01_case"
	t.custom_data = "[logic]\n"..
					"cfg = scripts\\code_inventory_box.ltx\n"..
					"[password]\n"..
					"code = "..code
	netpk:modify( obj, t, netpk.fState )
	obj = sim:object( obj.id )
	obj:use_ai_locations( false )

	sim:create( "zamok", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
	sim:create( "device_scaner", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
end
function ss_teleports()
	local sim = alife()
	sim:create( "ss_tele_1", vector():set(-427.43768310547,35.865772247314,-323.46566772461),137286,3664)
	sim:create( "ss_tele_2", vector():set(-418.9528503418,0.43205073475838,17.969646453857),146089,3664)
	sim:create( "ss_tele_3", vector():set(-394.98583984375,0.49851682782173,56.047332763672),146089,3664)
end
function del_ss_teleports()
	bind_mteleport.del_teleport( "ss_tele_1" )
	bind_mteleport.del_teleport( "ss_tele_2" )
	bind_mteleport.del_teleport( "ss_tele_3" )
end

function lc_question_add()
	-- Припять - ЧАЭС
	local obj = alife():object("exit_to_stancia_01")
	if obj then
		local t = { silent_mode = 0 }
		netpk:modify(obj, t, netpk.fState)
	end
end

function restore_anoms()
	if has_alife_info("snpt_vp1_have") then
		alife():create("zone_ozero",vector():set(58.848209381104,1.0079244375229,367.44982910156),276095,3760)
	end
	for i = 15606, 15618, 1 do
		alife():create(i)
	end
--	local t = {723,726,740,745,746,747,749,750,751,754,755,773}
--	for i,v in ipairs(t) do alife():create(v) end
end

function add_spot_lc()
	local obj = alife():story_object(130029)
	level.map_add_object_spot_ser(obj.id, "level_changer2", "В Восточную Припять")
end

function rewrite_restr_logic( obj_name, logic )
	local obj = alife():object( obj_name )
	if obj then
		local cd = logic and "[logic]\ncfg = "..logic or ""
		netpk:modify( obj, {custom_data =	cd}, netpk.fState )
		local rest = level.object_by_id( obj.id )
		if rest then
			local st = db.storage[rest:id()]
			st = {}
			xr_logic.initialize_obj( rest, st, false, db.actor, modules.stype_restrictor, (logic or "scripts\\dummy.ltx") )
		end
	end
end

function create_treasure( pos, lv, gv, items, mapspot, hint )
	local sim = alife()
	local ruck = sim:create( "m_inventory_box", pos, lv, gv )

	local id = ruck.id
	for sect, n in pairs(items) do
		for i = 1, n do
			sim:create(sect, pos, lv, gv, id)
		end
	end

	local t = netpk:get( ruck, netpk.fState )
	t.custom_data  = "[logic]\n".."cfg = scripts\\new_inventory_box.ltx"
	t.object_flags = bit_and( t.object_flags, bit_not(197) )
	netpk:set( ruck, t )
	ruck = sim:object( id )
	ruck:use_ai_locations( false )

	if mapspot then
		level.map_add_object_spot_ser( id, mapspot, (hint or "Тайник") )
	end
	return ruck
end
-----------------------------------------------------------------------------------------------
-- Изменение имени ГГ
local new_name = nil
function hero_rename_start()
	new_name = "Стрелок"
	netpk:modify( alife():actor(), { character_name = new_name }, netpk.fState )	-- запишем новое имя в серверный объект актёра
end
function hero_rename( pk )
	if not new_name then return end
	-- запишем новое имя в клиентский объект актёра, смещение [39]
	local t = {}
	pk:r_seek(0)
	table.insert( t, pk:r_u16() )		-- 2 байта
	for i = 1,37 do
		table.insert( t, pk:r_u8() )	-- + ещё 37 раз по 1
	end
	local n = pk:r_stringZ()			-- читаем имя
--	log( "old name of hero: [%s]", n )
	table.insert( t, new_name )			-- сохраняем вместо старого новое
	while not pk:r_eof() do				-- вычитываем остаток пакета побайтово
		table.insert( t, pk:r_u8() )
	end

	pk:w_begin(t[1])					-- теперь записываем всё обратно
	for i = 2, #t, 1 do
		n = t[i]
		if type( n ) == "string" then
			pk:w_stringZ( n )
		else
			pk:w_u8( n )
		end
	end

	log( "- New name of hero successfully saved" )
end


