-- -*- mode: lua; encoding: windows-1251 -*-
-----------------------------------------------------------------------------------------
-- File           : collect_sections.script
-- Description    : Извлечение секций игровых объектов из кофигов
-- Created        : 11.05.2014
-- Last update    : 08.10.2018
-- Author         : naxac
-----------------------------------------------------------------------------------------
local included = { "system.ltx" }
local sections = nil

local classes = {
	weapons = {
		[clsid.wpn_ak74]                = true,
		[clsid.wpn_ak74_s]              = true,
		[clsid.wpn_binocular]           = true,
		[clsid.wpn_binocular_s]         = true,
		[clsid.wpn_bm16]                = true,
		[clsid.wpn_bm16_s]              = true,
		[clsid.wpn_fn2000]              = true,
		[clsid.wpn_fort]                = true,
		[clsid.wpn_groza]               = true,
		[clsid.wpn_groza_s]             = true,
		[clsid.wpn_hpsa]                = true,
		[clsid.wpn_hpsa_s]              = true,
		[clsid.wpn_knife]               = true,
		[clsid.wpn_knife_s]             = true,
		[clsid.wpn_lr300]               = true,
		[clsid.wpn_lr300_s]             = true,
		[clsid.wpn_pm]                  = true,
		[clsid.wpn_pm_s]                = true,
		[clsid.wpn_rg6]                 = true,
		[clsid.wpn_rg6_s]               = true,
		[clsid.wpn_rpg7]                = true,
		[clsid.wpn_rpg7_s]              = true,
		[clsid.wpn_shotgun]             = true,
		[clsid.wpn_shotgun_s]           = true,
		[clsid.wpn_svd]                 = true,
		[clsid.wpn_svd_s]               = true,
		[clsid.wpn_svu]                 = true,
		[clsid.wpn_svu_s]               = true,
		[clsid.wpn_usp45]               = true,
		[clsid.wpn_usp45_s]             = true,
		[clsid.wpn_val]                 = true,
		[clsid.wpn_val_s]               = true,
		[clsid.wpn_vintorez]            = true,
		[clsid.wpn_vintorez_s]          = true,
		[clsid.wpn_walther]             = true,
		[clsid.wpn_walther_s]           = true
	},
	addons = {
		[clsid.wpn_grenade_launcher]    = true,
		[clsid.wpn_scope]               = true,
		[clsid.wpn_scope_s]             = true,
		[clsid.wpn_silencer]            = true
	},
	ammo = {
		[clsid.wpn_ammo]                = true,
		[clsid.wpn_ammo_m209]           = true,
		[clsid.wpn_ammo_og7b]           = true,
		[clsid.wpn_ammo_vog25]          = true,
		[clsid.wpn_grenade_f1]          = true,
		[clsid.wpn_grenade_fake]        = true,
		[clsid.wpn_grenade_rgd5]        = true,
		[clsid.wpn_grenade_rpg7]        = true
	},
	outfits = {
		[clsid.equ_exo]                 = true,
		[clsid.equ_military]            = true,
		[clsid.equ_scientific]          = true,
		[clsid.equ_stalker]             = true,
		[clsid.equ_stalker_s]           = true
	},
	artefacts = {
		[clsid.artefact]                = true,
		[clsid.artefact_s]              = true,
		[clsid.art_bast_artefact]       = true,
		[clsid.art_black_drops]         = true,
		[clsid.art_dummy]               = true,
		[clsid.art_electric_ball]       = true,
		[clsid.art_faded_ball]          = true,
		[clsid.art_galantine]           = true,
		[clsid.art_gravi]               = true,
		[clsid.art_gravi_black]         = true,
		[clsid.art_mercury_ball]        = true,
		[clsid.art_needles]             = true,
		[clsid.art_rusty_hair]          = true,
		[clsid.art_thorn]               = true,
		[clsid.art_zuda]                = true
	},
	eatable = {
		[clsid.obj_antirad]	= true,
		[clsid.obj_bandage]	= true,
		[clsid.obj_bottle]	= true,
		[clsid.obj_food]	= true,
		[clsid.obj_medkit]	= true
	},
	mobs = {
		[clsid.boar_s]                  = true,
		[clsid.bloodsucker_s]           = true,
		[clsid.dog_s]                   = true,
		[clsid.flesh_s]                 = true,
		[clsid.pseudodog_s]             = true,
		[clsid.psy_dog_s]               = true,
		[clsid.burer_s]                 = true,
		[clsid.cat_s]                   = true,
		[clsid.chimera_s]               = true,
		[clsid.controller_s]            = true,
		[clsid.fracture_s]              = true,
		[clsid.poltergeist_s]           = true,
		[clsid.gigant_s]                = true,
		[clsid.zombie_s]                = true,
		[clsid.tushkano_s]              = true,
		[clsid.crow]					= true,
		[clsid.snork_s]                 = true
	},
	npc = {
		[clsid.script_stalker]			= true
	},
	anomalies = {
		[clsid.zone_radioactive]		= true,
		[clsid.zone_bfuzz_s]			= true,
		[clsid.zone_mbald_s]			= true,
		[clsid.zone_galant_s]			= true,
		[clsid.zone_mincer_s]			= true,
		[clsid.zone_mosquito_bald]		= true
	},
	cars = {},
	items = {},
	quest_items = {},
	others = {},
	junk = {}
}
-- В эту таблицу внести новые классы, если они добавлены в мод (см. скрипт class_registrator)
-- Добавлены некоторые классы из ЗП, модов "Народнвя Солянка" (ТЧ), "Lost Alpha" (ТЧ) и ОП-2.1 (ТЧ)
local new_clsids = {
	weapons = {'wpn_auto_shotgun_s','wpn_zoom_s','wpn_magazined_s'},
	addons = {'wpn_scope_s','wpn_silencer_s','wpn_grenade_launcher_s'},
	ammo = {'wpn_grenade_rgd5_s','wpn_grenade_f1_s','wpn_ammo_vog25_s','wpn_ammo_og7b_s','wpn_ammo_m209_s','wpn_ammo_s'},
	outfits = {'equ_helmet_s'},
	mobs = {'rat_s','karlik_s','ghostboss_s','swampbeast_s','papakarlo_s'},
	npc = {'script_trader'},
	cars = {'car_s'},
	anomalies = {'zone_radio_s','zone_torrid_s','zone_zharka_s','zone_electra_s','zone_buzz_s','zone_ice_s','zone_elec_s','zone_zhar_s','zone_radioactive_s'}
}
	

function main( rewrite )
	if _G.cheat_base == nil
		or _G.cheat_base.list_sections == nil
		or rewrite
	then
		sections = {}
		if _G.cheat_base == nil then _G.cheat_base = {} end
		_G.cheat_base.list_sections = sections
		_G.cheat_base.npc_list = {}
		-- добавим в таблицу новые классы, если они есть
		for k, t in pairs( new_clsids ) do
			for _,v in ipairs( t ) do
				if clsid[ v ] then
					if classes[ k ] == nil then classes[ k ] = {} end
					classes[ k ][ clsid[v] ] = true
				end
			end
		end

		for k in pairs( classes ) do
			sections[ k ] = {}
		end

		local fs = getFS()
		local path, file, ex
		while true do
			path = included[ 1 ]
			ex = fs:exist( "$game_config$", path )
			if ex == nil then
				log( "! collect_sections: incorrect path: '%s'", path )
			elseif ex.modif == 0 then
				log( "~ collect_sections: folder 'config' hasn't full unpack! Path not found: [%s]", path )
			else
				file = fs:r_open( "$game_config$", path )
				find_somewhat( file:r_stringZ(), path )
			end
			table.remove( included, 1 )
			if #included == 0 then break end
		end
		table.print( sections )
	end
end

-- Ищем секции и инклуды в файле
function find_somewhat( file, path )
	-- если путь многоуровневый, то сформируем путь для инклуда
	local do_path = nil
	if path:find( "\\" ) then
		do_path = ""
		for s in string.gmatch( path, "([%w_]+)\\" ) do
			do_path = do_path..s.."\\"
		end
	--	log( "do-path: %s", do_path )
	end
	
	local sect
	for line in string.gmatch( file, "[^\n]+" ) do
		sect = string.match( line, "^(%b[])" )
		path = string.match( line, '^#include%s+(%b"")' )
		if sect then	-- нашли секцию
			sect = sect:sub( 2, -2 )
			if check_section( sect ) then
			--	log( "- collect_sections: section found [%s]", sect )
			end
		elseif path then		-- нашли инклуд
			path = path:sub( 2, -2 )
			if do_path then path = do_path..path end
		--	log( "- collect_sections: include file found '%s'", path )
			table.insert( included, path )
		end
	end
end

-- Записываем найденные секции в таблицу по группам
function check_section( sect )
	if not ( sys_ini:section_exist( sect ) and sys_ini:line_exist( sect, "class" ) ) then return false end

	local cls = sys_ini:r_clsid( sect, "class" )

	if sys_ini:line_exist( sect, "inv_name" )
		and sys_ini:line_exist( sect, "visual" )
		and sys_ini:line_exist( sect, "description" ) then	-- check inventory items

		if ( sys_ini:line_exist( sect, "can_take" )
			and sys_ini:r_bool( sect, "can_take" ) == false )	-- can't take it
			or sect:find( "^mp_" )							-- from multiplayer
		then
			table.insert( sections.junk, sect )
			return false
		end

		-- quest items
		if sys_ini:line_exist( sect, "quest_item" )
			and sys_ini:r_bool( sect, "quest_item" ) == true
		then
			table.insert( sections.quest_items, sect )
			return true
		end

		-- from table 'classes'
		for k,v in pairs( classes ) do
			if v[ cls ] then
				table.insert( sections[ k ], sect )
				return true
			end
		end
		-- other items
		table.insert( sections.items, sect )
		return true
	elseif classes.mobs[cls] then
		table.insert( sections.mobs, sect )
		return true
	elseif classes.npc[cls] then
		table.insert( sections.npc, sect )
		return true
	elseif classes.anomalies[cls] then
		table.insert( sections.anomalies, sect )
		return true
	elseif classes.cars[cls] then
		table.insert( sections.cars, sect )
		return true
	else
		table.insert( sections.others, sect )
		return true
	end
end
